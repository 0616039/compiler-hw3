Nonterminals useless in grammar

   TypeOrConstant


Terminals unused in grammar

   DEF


Grammar

    0 $accept: Program $end

    1 Program: ProgramName SEMICOLON DeclarationList FunctionList CompoundStatement END ProgramName

    2 ProgramName: ID

    3 DeclarationList: Epsilon
    4                | Declarations

    5 Declarations: Declaration
    6             | Declarations Declaration

    7 FunctionList: Epsilon
    8             | Functions

    9 Functions: FunctionDeclaration
   10          | Functions FunctionDeclaration

   11 FunctionDeclaration: FunctionName L_PARENTHESIS FormalArgList R_PARENTHESIS ReturnType SEMICOLON CompoundStatement END FunctionName

   12 FunctionName: ID

   13 FormalArgList: Epsilon
   14              | FormalArgs

   15 FormalArgs: FormalArg
   16           | FormalArgs SEMICOLON FormalArg

   17 FormalArg: IdList COLON Type

   18 IdList: ID
   19       | IdList COMMA ID

   20 ReturnType: COLON ScalarType
   21           | Epsilon

   22 Declaration: VAR IdList COLON Type SEMICOLON
   23            | VAR IdList COLON LiteralConstant SEMICOLON

   24 Type: ScalarType
   25     | ArrType

   26 ScalarType: INTEGER
   27           | REAL
   28           | STRING
   29           | BOOLEAN

   30 ArrType: ArrDecl ScalarType

   31 ArrDecl: ARRAY INT_LITERAL TO INT_LITERAL OF
   32        | ArrDecl ARRAY INT_LITERAL TO INT_LITERAL OF

   33 LiteralConstant: INT_LITERAL
   34                | REAL_LITERAL
   35                | STRING_LITERAL
   36                | TRUE
   37                | FALSE

   38 Statement: CompoundStatement
   39          | Simple
   40          | Condition
   41          | While
   42          | For
   43          | Return
   44          | FunctionInvokation

   45 CompoundStatement: BEGIN_ DeclarationList StatementList END

   46 Simple: VariableReference ASSIGN Expression SEMICOLON
   47       | PRINT Expression SEMICOLON
   48       | READ VariableReference SEMICOLON

   49 VariableReference: ID
   50                  | ID ArrForm

   51 ArrForm: L_BRACKET Expression R_BRACKET
   52        | ArrForm L_BRACKET Expression R_BRACKET

   53 Condition: IF Expression THEN StatementList ElseOrNot END IF

   54 ElseOrNot: ELSE StatementList
   55          | Epsilon

   56 While: WHILE Expression DO StatementList END DO

   57 For: FOR ID ASSIGN INT_LITERAL TO INT_LITERAL DO StatementList END DO

   58 Return: RETURN Expression SEMICOLON

   59 FunctionInvokation: FunctionCall SEMICOLON

   60 FunctionCall: ID L_PARENTHESIS ExpressionList R_PARENTHESIS

   61 ExpressionList: Epsilon
   62               | Expressions

   63 Expressions: Expression
   64            | Expressions COMMA Expression

   65 StatementList: Epsilon
   66              | Statements

   67 Statements: Statement
   68           | Statements Statement

   69 Expression: L_PARENTHESIS Expression R_PARENTHESIS
   70           | MINUS Expression
   71           | Expression MULTIPLY Expression
   72           | Expression DIVIDE Expression
   73           | Expression MOD Expression
   74           | Expression PLUS Expression
   75           | Expression MINUS Expression
   76           | Expression LESS Expression
   77           | Expression LESS_OR_EQUAL Expression
   78           | Expression GREATER Expression
   79           | Expression GREATER_OR_EQUAL Expression
   80           | Expression EQUAL Expression
   81           | Expression NOT_EQUAL Expression
   82           | NOT Expression
   83           | Expression AND Expression
   84           | Expression OR Expression
   85           | LiteralConstant
   86           | VariableReference
   87           | FunctionCall

   88 Epsilon: %empty


Terminals, with rules where they appear

$end (0) 0
error (256)
COMMA (258) 19 64
SEMICOLON (259) 1 11 16 22 23 46 47 48 58 59
COLON (260) 17 20 22 23
L_PARENTHESIS (261) 11 60 69
R_PARENTHESIS (262) 11 60 69
L_BRACKET (263) 51 52
R_BRACKET (264) 51 52
ASSIGN (265) 46 57
OR (266) 84
AND (267) 83
NOT (268) 82
LESS (269) 76
LESS_OR_EQUAL (270) 77
EQUAL (271) 80
GREATER (272) 78
GREATER_OR_EQUAL (273) 79
NOT_EQUAL (274) 81
PLUS (275) 74
MINUS (276) 70 75
MULTIPLY (277) 71
DIVIDE (278) 72
MOD (279) 73
UNARY_MINUS (280)
ARRAY (281) 31 32
BOOLEAN (282) 29
INTEGER (283) 26
REAL (284) 27
STRING (285) 28
END (286) 1 11 45 53 56 57
BEGIN_ (287) 45
DO (288) 56 57
ELSE (289) 54
FOR (290) 57
IF (291) 53
THEN (292) 53
WHILE (293) 56
DEF (294)
OF (295) 31 32
TO (296) 31 32 57
RETURN (297) 58
VAR (298) 22 23
FALSE (299) 37
TRUE (300) 36
PRINT (301) 47
READ (302) 48
ID (303) 2 12 18 19 49 50 57 60
INT_LITERAL (304) 31 32 33 57
REAL_LITERAL (305) 34
STRING_LITERAL (306) 35


Nonterminals, with rules where they appear

$accept (52)
    on left: 0
Program (53)
    on left: 1, on right: 0
ProgramName (54)
    on left: 2, on right: 1
DeclarationList (55)
    on left: 3 4, on right: 1 45
Declarations (56)
    on left: 5 6, on right: 4 6
FunctionList (57)
    on left: 7 8, on right: 1
Functions (58)
    on left: 9 10, on right: 8 10
FunctionDeclaration (59)
    on left: 11, on right: 9 10
FunctionName (60)
    on left: 12, on right: 11
FormalArgList (61)
    on left: 13 14, on right: 11
FormalArgs (62)
    on left: 15 16, on right: 14 16
FormalArg (63)
    on left: 17, on right: 15 16
IdList (64)
    on left: 18 19, on right: 17 19 22 23
ReturnType (65)
    on left: 20 21, on right: 11
Declaration (66)
    on left: 22 23, on right: 5 6
Type (67)
    on left: 24 25, on right: 17 22
ScalarType (68)
    on left: 26 27 28 29, on right: 20 24 30
ArrType (69)
    on left: 30, on right: 25
ArrDecl (70)
    on left: 31 32, on right: 30 32
LiteralConstant (71)
    on left: 33 34 35 36 37, on right: 23 85
Statement (72)
    on left: 38 39 40 41 42 43 44, on right: 67 68
CompoundStatement (73)
    on left: 45, on right: 1 11 38
Simple (74)
    on left: 46 47 48, on right: 39
VariableReference (75)
    on left: 49 50, on right: 46 48 86
ArrForm (76)
    on left: 51 52, on right: 50 52
Condition (77)
    on left: 53, on right: 40
ElseOrNot (78)
    on left: 54 55, on right: 53
While (79)
    on left: 56, on right: 41
For (80)
    on left: 57, on right: 42
Return (81)
    on left: 58, on right: 43
FunctionInvokation (82)
    on left: 59, on right: 44
FunctionCall (83)
    on left: 60, on right: 59 87
ExpressionList (84)
    on left: 61 62, on right: 60
Expressions (85)
    on left: 63 64, on right: 62 64
StatementList (86)
    on left: 65 66, on right: 45 53 54 56 57
Statements (87)
    on left: 67 68, on right: 66 68
Expression (88)
    on left: 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86
    87, on right: 46 47 51 52 53 56 58 63 64 69 70 71 72 73 74 75 76
    77 78 79 80 81 82 83 84
Epsilon (89)
    on left: 88, on right: 3 7 13 21 55 61 65


State 0

    0 $accept: . Program $end

    ID  shift, and go to state 1

    Program      go to state 2
    ProgramName  go to state 3


State 1

    2 ProgramName: ID .

    $default  reduce using rule 2 (ProgramName)


State 2

    0 $accept: Program . $end

    $end  shift, and go to state 4


State 3

    1 Program: ProgramName . SEMICOLON DeclarationList FunctionList CompoundStatement END ProgramName

    SEMICOLON  shift, and go to state 5


State 4

    0 $accept: Program $end .

    $default  accept


State 5

    1 Program: ProgramName SEMICOLON . DeclarationList FunctionList CompoundStatement END ProgramName

    VAR  shift, and go to state 6

    $default  reduce using rule 88 (Epsilon)

    DeclarationList  go to state 7
    Declarations     go to state 8
    Declaration      go to state 9
    Epsilon          go to state 10


State 6

   22 Declaration: VAR . IdList COLON Type SEMICOLON
   23            | VAR . IdList COLON LiteralConstant SEMICOLON

    ID  shift, and go to state 11

    IdList  go to state 12


State 7

    1 Program: ProgramName SEMICOLON DeclarationList . FunctionList CompoundStatement END ProgramName

    ID  shift, and go to state 13

    $default  reduce using rule 88 (Epsilon)

    FunctionList         go to state 14
    Functions            go to state 15
    FunctionDeclaration  go to state 16
    FunctionName         go to state 17
    Epsilon              go to state 18


State 8

    4 DeclarationList: Declarations .
    6 Declarations: Declarations . Declaration

    VAR  shift, and go to state 6

    $default  reduce using rule 4 (DeclarationList)

    Declaration  go to state 19


State 9

    5 Declarations: Declaration .

    $default  reduce using rule 5 (Declarations)


State 10

    3 DeclarationList: Epsilon .

    $default  reduce using rule 3 (DeclarationList)


State 11

   18 IdList: ID .

    $default  reduce using rule 18 (IdList)


State 12

   19 IdList: IdList . COMMA ID
   22 Declaration: VAR IdList . COLON Type SEMICOLON
   23            | VAR IdList . COLON LiteralConstant SEMICOLON

    COMMA  shift, and go to state 20
    COLON  shift, and go to state 21


State 13

   12 FunctionName: ID .

    $default  reduce using rule 12 (FunctionName)


State 14

    1 Program: ProgramName SEMICOLON DeclarationList FunctionList . CompoundStatement END ProgramName

    BEGIN_  shift, and go to state 22

    CompoundStatement  go to state 23


State 15

    8 FunctionList: Functions .
   10 Functions: Functions . FunctionDeclaration

    ID  shift, and go to state 13

    $default  reduce using rule 8 (FunctionList)

    FunctionDeclaration  go to state 24
    FunctionName         go to state 17


State 16

    9 Functions: FunctionDeclaration .

    $default  reduce using rule 9 (Functions)


State 17

   11 FunctionDeclaration: FunctionName . L_PARENTHESIS FormalArgList R_PARENTHESIS ReturnType SEMICOLON CompoundStatement END FunctionName

    L_PARENTHESIS  shift, and go to state 25


State 18

    7 FunctionList: Epsilon .

    $default  reduce using rule 7 (FunctionList)


State 19

    6 Declarations: Declarations Declaration .

    $default  reduce using rule 6 (Declarations)


State 20

   19 IdList: IdList COMMA . ID

    ID  shift, and go to state 26


State 21

   22 Declaration: VAR IdList COLON . Type SEMICOLON
   23            | VAR IdList COLON . LiteralConstant SEMICOLON

    ARRAY           shift, and go to state 27
    BOOLEAN         shift, and go to state 28
    INTEGER         shift, and go to state 29
    REAL            shift, and go to state 30
    STRING          shift, and go to state 31
    FALSE           shift, and go to state 32
    TRUE            shift, and go to state 33
    INT_LITERAL     shift, and go to state 34
    REAL_LITERAL    shift, and go to state 35
    STRING_LITERAL  shift, and go to state 36

    Type             go to state 37
    ScalarType       go to state 38
    ArrType          go to state 39
    ArrDecl          go to state 40
    LiteralConstant  go to state 41


State 22

   45 CompoundStatement: BEGIN_ . DeclarationList StatementList END

    VAR  shift, and go to state 6

    $default  reduce using rule 88 (Epsilon)

    DeclarationList  go to state 42
    Declarations     go to state 8
    Declaration      go to state 9
    Epsilon          go to state 10


State 23

    1 Program: ProgramName SEMICOLON DeclarationList FunctionList CompoundStatement . END ProgramName

    END  shift, and go to state 43


State 24

   10 Functions: Functions FunctionDeclaration .

    $default  reduce using rule 10 (Functions)


State 25

   11 FunctionDeclaration: FunctionName L_PARENTHESIS . FormalArgList R_PARENTHESIS ReturnType SEMICOLON CompoundStatement END FunctionName

    ID  shift, and go to state 11

    $default  reduce using rule 88 (Epsilon)

    FormalArgList  go to state 44
    FormalArgs     go to state 45
    FormalArg      go to state 46
    IdList         go to state 47
    Epsilon        go to state 48


State 26

   19 IdList: IdList COMMA ID .

    $default  reduce using rule 19 (IdList)


State 27

   31 ArrDecl: ARRAY . INT_LITERAL TO INT_LITERAL OF

    INT_LITERAL  shift, and go to state 49


State 28

   29 ScalarType: BOOLEAN .

    $default  reduce using rule 29 (ScalarType)


State 29

   26 ScalarType: INTEGER .

    $default  reduce using rule 26 (ScalarType)


State 30

   27 ScalarType: REAL .

    $default  reduce using rule 27 (ScalarType)


State 31

   28 ScalarType: STRING .

    $default  reduce using rule 28 (ScalarType)


State 32

   37 LiteralConstant: FALSE .

    $default  reduce using rule 37 (LiteralConstant)


State 33

   36 LiteralConstant: TRUE .

    $default  reduce using rule 36 (LiteralConstant)


State 34

   33 LiteralConstant: INT_LITERAL .

    $default  reduce using rule 33 (LiteralConstant)


State 35

   34 LiteralConstant: REAL_LITERAL .

    $default  reduce using rule 34 (LiteralConstant)


State 36

   35 LiteralConstant: STRING_LITERAL .

    $default  reduce using rule 35 (LiteralConstant)


State 37

   22 Declaration: VAR IdList COLON Type . SEMICOLON

    SEMICOLON  shift, and go to state 50


State 38

   24 Type: ScalarType .

    $default  reduce using rule 24 (Type)


State 39

   25 Type: ArrType .

    $default  reduce using rule 25 (Type)


State 40

   30 ArrType: ArrDecl . ScalarType
   32 ArrDecl: ArrDecl . ARRAY INT_LITERAL TO INT_LITERAL OF

    ARRAY    shift, and go to state 51
    BOOLEAN  shift, and go to state 28
    INTEGER  shift, and go to state 29
    REAL     shift, and go to state 30
    STRING   shift, and go to state 31

    ScalarType  go to state 52


State 41

   23 Declaration: VAR IdList COLON LiteralConstant . SEMICOLON

    SEMICOLON  shift, and go to state 53


State 42

   45 CompoundStatement: BEGIN_ DeclarationList . StatementList END

    BEGIN_  shift, and go to state 22
    FOR     shift, and go to state 54
    IF      shift, and go to state 55
    WHILE   shift, and go to state 56
    RETURN  shift, and go to state 57
    PRINT   shift, and go to state 58
    READ    shift, and go to state 59
    ID      shift, and go to state 60

    $default  reduce using rule 88 (Epsilon)

    Statement           go to state 61
    CompoundStatement   go to state 62
    Simple              go to state 63
    VariableReference   go to state 64
    Condition           go to state 65
    While               go to state 66
    For                 go to state 67
    Return              go to state 68
    FunctionInvokation  go to state 69
    FunctionCall        go to state 70
    StatementList       go to state 71
    Statements          go to state 72
    Epsilon             go to state 73


State 43

    1 Program: ProgramName SEMICOLON DeclarationList FunctionList CompoundStatement END . ProgramName

    ID  shift, and go to state 1

    ProgramName  go to state 74


State 44

   11 FunctionDeclaration: FunctionName L_PARENTHESIS FormalArgList . R_PARENTHESIS ReturnType SEMICOLON CompoundStatement END FunctionName

    R_PARENTHESIS  shift, and go to state 75


State 45

   14 FormalArgList: FormalArgs .
   16 FormalArgs: FormalArgs . SEMICOLON FormalArg

    SEMICOLON  shift, and go to state 76

    $default  reduce using rule 14 (FormalArgList)


State 46

   15 FormalArgs: FormalArg .

    $default  reduce using rule 15 (FormalArgs)


State 47

   17 FormalArg: IdList . COLON Type
   19 IdList: IdList . COMMA ID

    COMMA  shift, and go to state 20
    COLON  shift, and go to state 77


State 48

   13 FormalArgList: Epsilon .

    $default  reduce using rule 13 (FormalArgList)


State 49

   31 ArrDecl: ARRAY INT_LITERAL . TO INT_LITERAL OF

    TO  shift, and go to state 78


State 50

   22 Declaration: VAR IdList COLON Type SEMICOLON .

    $default  reduce using rule 22 (Declaration)


State 51

   32 ArrDecl: ArrDecl ARRAY . INT_LITERAL TO INT_LITERAL OF

    INT_LITERAL  shift, and go to state 79


State 52

   30 ArrType: ArrDecl ScalarType .

    $default  reduce using rule 30 (ArrType)


State 53

   23 Declaration: VAR IdList COLON LiteralConstant SEMICOLON .

    $default  reduce using rule 23 (Declaration)


State 54

   57 For: FOR . ID ASSIGN INT_LITERAL TO INT_LITERAL DO StatementList END DO

    ID  shift, and go to state 80


State 55

   53 Condition: IF . Expression THEN StatementList ElseOrNot END IF

    L_PARENTHESIS   shift, and go to state 81
    NOT             shift, and go to state 82
    MINUS           shift, and go to state 83
    FALSE           shift, and go to state 32
    TRUE            shift, and go to state 33
    ID              shift, and go to state 60
    INT_LITERAL     shift, and go to state 34
    REAL_LITERAL    shift, and go to state 35
    STRING_LITERAL  shift, and go to state 36

    LiteralConstant    go to state 84
    VariableReference  go to state 85
    FunctionCall       go to state 86
    Expression         go to state 87


State 56

   56 While: WHILE . Expression DO StatementList END DO

    L_PARENTHESIS   shift, and go to state 81
    NOT             shift, and go to state 82
    MINUS           shift, and go to state 83
    FALSE           shift, and go to state 32
    TRUE            shift, and go to state 33
    ID              shift, and go to state 60
    INT_LITERAL     shift, and go to state 34
    REAL_LITERAL    shift, and go to state 35
    STRING_LITERAL  shift, and go to state 36

    LiteralConstant    go to state 84
    VariableReference  go to state 85
    FunctionCall       go to state 86
    Expression         go to state 88


State 57

   58 Return: RETURN . Expression SEMICOLON

    L_PARENTHESIS   shift, and go to state 81
    NOT             shift, and go to state 82
    MINUS           shift, and go to state 83
    FALSE           shift, and go to state 32
    TRUE            shift, and go to state 33
    ID              shift, and go to state 60
    INT_LITERAL     shift, and go to state 34
    REAL_LITERAL    shift, and go to state 35
    STRING_LITERAL  shift, and go to state 36

    LiteralConstant    go to state 84
    VariableReference  go to state 85
    FunctionCall       go to state 86
    Expression         go to state 89


State 58

   47 Simple: PRINT . Expression SEMICOLON

    L_PARENTHESIS   shift, and go to state 81
    NOT             shift, and go to state 82
    MINUS           shift, and go to state 83
    FALSE           shift, and go to state 32
    TRUE            shift, and go to state 33
    ID              shift, and go to state 60
    INT_LITERAL     shift, and go to state 34
    REAL_LITERAL    shift, and go to state 35
    STRING_LITERAL  shift, and go to state 36

    LiteralConstant    go to state 84
    VariableReference  go to state 85
    FunctionCall       go to state 86
    Expression         go to state 90


State 59

   48 Simple: READ . VariableReference SEMICOLON

    ID  shift, and go to state 91

    VariableReference  go to state 92


State 60

   49 VariableReference: ID .
   50                  | ID . ArrForm
   60 FunctionCall: ID . L_PARENTHESIS ExpressionList R_PARENTHESIS

    L_PARENTHESIS  shift, and go to state 93
    L_BRACKET      shift, and go to state 94

    $default  reduce using rule 49 (VariableReference)

    ArrForm  go to state 95


State 61

   67 Statements: Statement .

    $default  reduce using rule 67 (Statements)


State 62

   38 Statement: CompoundStatement .

    $default  reduce using rule 38 (Statement)


State 63

   39 Statement: Simple .

    $default  reduce using rule 39 (Statement)


State 64

   46 Simple: VariableReference . ASSIGN Expression SEMICOLON

    ASSIGN  shift, and go to state 96


State 65

   40 Statement: Condition .

    $default  reduce using rule 40 (Statement)


State 66

   41 Statement: While .

    $default  reduce using rule 41 (Statement)


State 67

   42 Statement: For .

    $default  reduce using rule 42 (Statement)


State 68

   43 Statement: Return .

    $default  reduce using rule 43 (Statement)


State 69

   44 Statement: FunctionInvokation .

    $default  reduce using rule 44 (Statement)


State 70

   59 FunctionInvokation: FunctionCall . SEMICOLON

    SEMICOLON  shift, and go to state 97


State 71

   45 CompoundStatement: BEGIN_ DeclarationList StatementList . END

    END  shift, and go to state 98


State 72

   66 StatementList: Statements .
   68 Statements: Statements . Statement

    BEGIN_  shift, and go to state 22
    FOR     shift, and go to state 54
    IF      shift, and go to state 55
    WHILE   shift, and go to state 56
    RETURN  shift, and go to state 57
    PRINT   shift, and go to state 58
    READ    shift, and go to state 59
    ID      shift, and go to state 60

    $default  reduce using rule 66 (StatementList)

    Statement           go to state 99
    CompoundStatement   go to state 62
    Simple              go to state 63
    VariableReference   go to state 64
    Condition           go to state 65
    While               go to state 66
    For                 go to state 67
    Return              go to state 68
    FunctionInvokation  go to state 69
    FunctionCall        go to state 70


State 73

   65 StatementList: Epsilon .

    $default  reduce using rule 65 (StatementList)


State 74

    1 Program: ProgramName SEMICOLON DeclarationList FunctionList CompoundStatement END ProgramName .

    $default  reduce using rule 1 (Program)


State 75

   11 FunctionDeclaration: FunctionName L_PARENTHESIS FormalArgList R_PARENTHESIS . ReturnType SEMICOLON CompoundStatement END FunctionName

    COLON  shift, and go to state 100

    $default  reduce using rule 88 (Epsilon)

    ReturnType  go to state 101
    Epsilon     go to state 102


State 76

   16 FormalArgs: FormalArgs SEMICOLON . FormalArg

    ID  shift, and go to state 11

    FormalArg  go to state 103
    IdList     go to state 47


State 77

   17 FormalArg: IdList COLON . Type

    ARRAY    shift, and go to state 27
    BOOLEAN  shift, and go to state 28
    INTEGER  shift, and go to state 29
    REAL     shift, and go to state 30
    STRING   shift, and go to state 31

    Type        go to state 104
    ScalarType  go to state 38
    ArrType     go to state 39
    ArrDecl     go to state 40


State 78

   31 ArrDecl: ARRAY INT_LITERAL TO . INT_LITERAL OF

    INT_LITERAL  shift, and go to state 105


State 79

   32 ArrDecl: ArrDecl ARRAY INT_LITERAL . TO INT_LITERAL OF

    TO  shift, and go to state 106


State 80

   57 For: FOR ID . ASSIGN INT_LITERAL TO INT_LITERAL DO StatementList END DO

    ASSIGN  shift, and go to state 107


State 81

   69 Expression: L_PARENTHESIS . Expression R_PARENTHESIS

    L_PARENTHESIS   shift, and go to state 81
    NOT             shift, and go to state 82
    MINUS           shift, and go to state 83
    FALSE           shift, and go to state 32
    TRUE            shift, and go to state 33
    ID              shift, and go to state 60
    INT_LITERAL     shift, and go to state 34
    REAL_LITERAL    shift, and go to state 35
    STRING_LITERAL  shift, and go to state 36

    LiteralConstant    go to state 84
    VariableReference  go to state 85
    FunctionCall       go to state 86
    Expression         go to state 108


State 82

   82 Expression: NOT . Expression

    L_PARENTHESIS   shift, and go to state 81
    NOT             shift, and go to state 82
    MINUS           shift, and go to state 83
    FALSE           shift, and go to state 32
    TRUE            shift, and go to state 33
    ID              shift, and go to state 60
    INT_LITERAL     shift, and go to state 34
    REAL_LITERAL    shift, and go to state 35
    STRING_LITERAL  shift, and go to state 36

    LiteralConstant    go to state 84
    VariableReference  go to state 85
    FunctionCall       go to state 86
    Expression         go to state 109


State 83

   70 Expression: MINUS . Expression

    L_PARENTHESIS   shift, and go to state 81
    NOT             shift, and go to state 82
    MINUS           shift, and go to state 83
    FALSE           shift, and go to state 32
    TRUE            shift, and go to state 33
    ID              shift, and go to state 60
    INT_LITERAL     shift, and go to state 34
    REAL_LITERAL    shift, and go to state 35
    STRING_LITERAL  shift, and go to state 36

    LiteralConstant    go to state 84
    VariableReference  go to state 85
    FunctionCall       go to state 86
    Expression         go to state 110


State 84

   85 Expression: LiteralConstant .

    $default  reduce using rule 85 (Expression)


State 85

   86 Expression: VariableReference .

    $default  reduce using rule 86 (Expression)


State 86

   87 Expression: FunctionCall .

    $default  reduce using rule 87 (Expression)


State 87

   53 Condition: IF Expression . THEN StatementList ElseOrNot END IF
   71 Expression: Expression . MULTIPLY Expression
   72           | Expression . DIVIDE Expression
   73           | Expression . MOD Expression
   74           | Expression . PLUS Expression
   75           | Expression . MINUS Expression
   76           | Expression . LESS Expression
   77           | Expression . LESS_OR_EQUAL Expression
   78           | Expression . GREATER Expression
   79           | Expression . GREATER_OR_EQUAL Expression
   80           | Expression . EQUAL Expression
   81           | Expression . NOT_EQUAL Expression
   83           | Expression . AND Expression
   84           | Expression . OR Expression

    OR                shift, and go to state 111
    AND               shift, and go to state 112
    LESS              shift, and go to state 113
    LESS_OR_EQUAL     shift, and go to state 114
    EQUAL             shift, and go to state 115
    GREATER           shift, and go to state 116
    GREATER_OR_EQUAL  shift, and go to state 117
    NOT_EQUAL         shift, and go to state 118
    PLUS              shift, and go to state 119
    MINUS             shift, and go to state 120
    MULTIPLY          shift, and go to state 121
    DIVIDE            shift, and go to state 122
    MOD               shift, and go to state 123
    THEN              shift, and go to state 124


State 88

   56 While: WHILE Expression . DO StatementList END DO
   71 Expression: Expression . MULTIPLY Expression
   72           | Expression . DIVIDE Expression
   73           | Expression . MOD Expression
   74           | Expression . PLUS Expression
   75           | Expression . MINUS Expression
   76           | Expression . LESS Expression
   77           | Expression . LESS_OR_EQUAL Expression
   78           | Expression . GREATER Expression
   79           | Expression . GREATER_OR_EQUAL Expression
   80           | Expression . EQUAL Expression
   81           | Expression . NOT_EQUAL Expression
   83           | Expression . AND Expression
   84           | Expression . OR Expression

    OR                shift, and go to state 111
    AND               shift, and go to state 112
    LESS              shift, and go to state 113
    LESS_OR_EQUAL     shift, and go to state 114
    EQUAL             shift, and go to state 115
    GREATER           shift, and go to state 116
    GREATER_OR_EQUAL  shift, and go to state 117
    NOT_EQUAL         shift, and go to state 118
    PLUS              shift, and go to state 119
    MINUS             shift, and go to state 120
    MULTIPLY          shift, and go to state 121
    DIVIDE            shift, and go to state 122
    MOD               shift, and go to state 123
    DO                shift, and go to state 125


State 89

   58 Return: RETURN Expression . SEMICOLON
   71 Expression: Expression . MULTIPLY Expression
   72           | Expression . DIVIDE Expression
   73           | Expression . MOD Expression
   74           | Expression . PLUS Expression
   75           | Expression . MINUS Expression
   76           | Expression . LESS Expression
   77           | Expression . LESS_OR_EQUAL Expression
   78           | Expression . GREATER Expression
   79           | Expression . GREATER_OR_EQUAL Expression
   80           | Expression . EQUAL Expression
   81           | Expression . NOT_EQUAL Expression
   83           | Expression . AND Expression
   84           | Expression . OR Expression

    SEMICOLON         shift, and go to state 126
    OR                shift, and go to state 111
    AND               shift, and go to state 112
    LESS              shift, and go to state 113
    LESS_OR_EQUAL     shift, and go to state 114
    EQUAL             shift, and go to state 115
    GREATER           shift, and go to state 116
    GREATER_OR_EQUAL  shift, and go to state 117
    NOT_EQUAL         shift, and go to state 118
    PLUS              shift, and go to state 119
    MINUS             shift, and go to state 120
    MULTIPLY          shift, and go to state 121
    DIVIDE            shift, and go to state 122
    MOD               shift, and go to state 123


State 90

   47 Simple: PRINT Expression . SEMICOLON
   71 Expression: Expression . MULTIPLY Expression
   72           | Expression . DIVIDE Expression
   73           | Expression . MOD Expression
   74           | Expression . PLUS Expression
   75           | Expression . MINUS Expression
   76           | Expression . LESS Expression
   77           | Expression . LESS_OR_EQUAL Expression
   78           | Expression . GREATER Expression
   79           | Expression . GREATER_OR_EQUAL Expression
   80           | Expression . EQUAL Expression
   81           | Expression . NOT_EQUAL Expression
   83           | Expression . AND Expression
   84           | Expression . OR Expression

    SEMICOLON         shift, and go to state 127
    OR                shift, and go to state 111
    AND               shift, and go to state 112
    LESS              shift, and go to state 113
    LESS_OR_EQUAL     shift, and go to state 114
    EQUAL             shift, and go to state 115
    GREATER           shift, and go to state 116
    GREATER_OR_EQUAL  shift, and go to state 117
    NOT_EQUAL         shift, and go to state 118
    PLUS              shift, and go to state 119
    MINUS             shift, and go to state 120
    MULTIPLY          shift, and go to state 121
    DIVIDE            shift, and go to state 122
    MOD               shift, and go to state 123


State 91

   49 VariableReference: ID .
   50                  | ID . ArrForm

    L_BRACKET  shift, and go to state 94

    $default  reduce using rule 49 (VariableReference)

    ArrForm  go to state 95


State 92

   48 Simple: READ VariableReference . SEMICOLON

    SEMICOLON  shift, and go to state 128


State 93

   60 FunctionCall: ID L_PARENTHESIS . ExpressionList R_PARENTHESIS

    L_PARENTHESIS   shift, and go to state 81
    NOT             shift, and go to state 82
    MINUS           shift, and go to state 83
    FALSE           shift, and go to state 32
    TRUE            shift, and go to state 33
    ID              shift, and go to state 60
    INT_LITERAL     shift, and go to state 34
    REAL_LITERAL    shift, and go to state 35
    STRING_LITERAL  shift, and go to state 36

    $default  reduce using rule 88 (Epsilon)

    LiteralConstant    go to state 84
    VariableReference  go to state 85
    FunctionCall       go to state 86
    ExpressionList     go to state 129
    Expressions        go to state 130
    Expression         go to state 131
    Epsilon            go to state 132


State 94

   51 ArrForm: L_BRACKET . Expression R_BRACKET

    L_PARENTHESIS   shift, and go to state 81
    NOT             shift, and go to state 82
    MINUS           shift, and go to state 83
    FALSE           shift, and go to state 32
    TRUE            shift, and go to state 33
    ID              shift, and go to state 60
    INT_LITERAL     shift, and go to state 34
    REAL_LITERAL    shift, and go to state 35
    STRING_LITERAL  shift, and go to state 36

    LiteralConstant    go to state 84
    VariableReference  go to state 85
    FunctionCall       go to state 86
    Expression         go to state 133


State 95

   50 VariableReference: ID ArrForm .
   52 ArrForm: ArrForm . L_BRACKET Expression R_BRACKET

    L_BRACKET  shift, and go to state 134

    $default  reduce using rule 50 (VariableReference)


State 96

   46 Simple: VariableReference ASSIGN . Expression SEMICOLON

    L_PARENTHESIS   shift, and go to state 81
    NOT             shift, and go to state 82
    MINUS           shift, and go to state 83
    FALSE           shift, and go to state 32
    TRUE            shift, and go to state 33
    ID              shift, and go to state 60
    INT_LITERAL     shift, and go to state 34
    REAL_LITERAL    shift, and go to state 35
    STRING_LITERAL  shift, and go to state 36

    LiteralConstant    go to state 84
    VariableReference  go to state 85
    FunctionCall       go to state 86
    Expression         go to state 135


State 97

   59 FunctionInvokation: FunctionCall SEMICOLON .

    $default  reduce using rule 59 (FunctionInvokation)


State 98

   45 CompoundStatement: BEGIN_ DeclarationList StatementList END .

    $default  reduce using rule 45 (CompoundStatement)


State 99

   68 Statements: Statements Statement .

    $default  reduce using rule 68 (Statements)


State 100

   20 ReturnType: COLON . ScalarType

    BOOLEAN  shift, and go to state 28
    INTEGER  shift, and go to state 29
    REAL     shift, and go to state 30
    STRING   shift, and go to state 31

    ScalarType  go to state 136


State 101

   11 FunctionDeclaration: FunctionName L_PARENTHESIS FormalArgList R_PARENTHESIS ReturnType . SEMICOLON CompoundStatement END FunctionName

    SEMICOLON  shift, and go to state 137


State 102

   21 ReturnType: Epsilon .

    $default  reduce using rule 21 (ReturnType)


State 103

   16 FormalArgs: FormalArgs SEMICOLON FormalArg .

    $default  reduce using rule 16 (FormalArgs)


State 104

   17 FormalArg: IdList COLON Type .

    $default  reduce using rule 17 (FormalArg)


State 105

   31 ArrDecl: ARRAY INT_LITERAL TO INT_LITERAL . OF

    OF  shift, and go to state 138


State 106

   32 ArrDecl: ArrDecl ARRAY INT_LITERAL TO . INT_LITERAL OF

    INT_LITERAL  shift, and go to state 139


State 107

   57 For: FOR ID ASSIGN . INT_LITERAL TO INT_LITERAL DO StatementList END DO

    INT_LITERAL  shift, and go to state 140


State 108

   69 Expression: L_PARENTHESIS Expression . R_PARENTHESIS
   71           | Expression . MULTIPLY Expression
   72           | Expression . DIVIDE Expression
   73           | Expression . MOD Expression
   74           | Expression . PLUS Expression
   75           | Expression . MINUS Expression
   76           | Expression . LESS Expression
   77           | Expression . LESS_OR_EQUAL Expression
   78           | Expression . GREATER Expression
   79           | Expression . GREATER_OR_EQUAL Expression
   80           | Expression . EQUAL Expression
   81           | Expression . NOT_EQUAL Expression
   83           | Expression . AND Expression
   84           | Expression . OR Expression

    R_PARENTHESIS     shift, and go to state 141
    OR                shift, and go to state 111
    AND               shift, and go to state 112
    LESS              shift, and go to state 113
    LESS_OR_EQUAL     shift, and go to state 114
    EQUAL             shift, and go to state 115
    GREATER           shift, and go to state 116
    GREATER_OR_EQUAL  shift, and go to state 117
    NOT_EQUAL         shift, and go to state 118
    PLUS              shift, and go to state 119
    MINUS             shift, and go to state 120
    MULTIPLY          shift, and go to state 121
    DIVIDE            shift, and go to state 122
    MOD               shift, and go to state 123


State 109

   71 Expression: Expression . MULTIPLY Expression
   72           | Expression . DIVIDE Expression
   73           | Expression . MOD Expression
   74           | Expression . PLUS Expression
   75           | Expression . MINUS Expression
   76           | Expression . LESS Expression
   77           | Expression . LESS_OR_EQUAL Expression
   78           | Expression . GREATER Expression
   79           | Expression . GREATER_OR_EQUAL Expression
   80           | Expression . EQUAL Expression
   81           | Expression . NOT_EQUAL Expression
   82           | NOT Expression .
   83           | Expression . AND Expression
   84           | Expression . OR Expression

    LESS              shift, and go to state 113
    LESS_OR_EQUAL     shift, and go to state 114
    EQUAL             shift, and go to state 115
    GREATER           shift, and go to state 116
    GREATER_OR_EQUAL  shift, and go to state 117
    NOT_EQUAL         shift, and go to state 118
    PLUS              shift, and go to state 119
    MINUS             shift, and go to state 120
    MULTIPLY          shift, and go to state 121
    DIVIDE            shift, and go to state 122
    MOD               shift, and go to state 123

    $default  reduce using rule 82 (Expression)


State 110

   70 Expression: MINUS Expression .
   71           | Expression . MULTIPLY Expression
   72           | Expression . DIVIDE Expression
   73           | Expression . MOD Expression
   74           | Expression . PLUS Expression
   75           | Expression . MINUS Expression
   76           | Expression . LESS Expression
   77           | Expression . LESS_OR_EQUAL Expression
   78           | Expression . GREATER Expression
   79           | Expression . GREATER_OR_EQUAL Expression
   80           | Expression . EQUAL Expression
   81           | Expression . NOT_EQUAL Expression
   83           | Expression . AND Expression
   84           | Expression . OR Expression

    $default  reduce using rule 70 (Expression)


State 111

   84 Expression: Expression OR . Expression

    L_PARENTHESIS   shift, and go to state 81
    NOT             shift, and go to state 82
    MINUS           shift, and go to state 83
    FALSE           shift, and go to state 32
    TRUE            shift, and go to state 33
    ID              shift, and go to state 60
    INT_LITERAL     shift, and go to state 34
    REAL_LITERAL    shift, and go to state 35
    STRING_LITERAL  shift, and go to state 36

    LiteralConstant    go to state 84
    VariableReference  go to state 85
    FunctionCall       go to state 86
    Expression         go to state 142


State 112

   83 Expression: Expression AND . Expression

    L_PARENTHESIS   shift, and go to state 81
    NOT             shift, and go to state 82
    MINUS           shift, and go to state 83
    FALSE           shift, and go to state 32
    TRUE            shift, and go to state 33
    ID              shift, and go to state 60
    INT_LITERAL     shift, and go to state 34
    REAL_LITERAL    shift, and go to state 35
    STRING_LITERAL  shift, and go to state 36

    LiteralConstant    go to state 84
    VariableReference  go to state 85
    FunctionCall       go to state 86
    Expression         go to state 143


State 113

   76 Expression: Expression LESS . Expression

    L_PARENTHESIS   shift, and go to state 81
    NOT             shift, and go to state 82
    MINUS           shift, and go to state 83
    FALSE           shift, and go to state 32
    TRUE            shift, and go to state 33
    ID              shift, and go to state 60
    INT_LITERAL     shift, and go to state 34
    REAL_LITERAL    shift, and go to state 35
    STRING_LITERAL  shift, and go to state 36

    LiteralConstant    go to state 84
    VariableReference  go to state 85
    FunctionCall       go to state 86
    Expression         go to state 144


State 114

   77 Expression: Expression LESS_OR_EQUAL . Expression

    L_PARENTHESIS   shift, and go to state 81
    NOT             shift, and go to state 82
    MINUS           shift, and go to state 83
    FALSE           shift, and go to state 32
    TRUE            shift, and go to state 33
    ID              shift, and go to state 60
    INT_LITERAL     shift, and go to state 34
    REAL_LITERAL    shift, and go to state 35
    STRING_LITERAL  shift, and go to state 36

    LiteralConstant    go to state 84
    VariableReference  go to state 85
    FunctionCall       go to state 86
    Expression         go to state 145


State 115

   80 Expression: Expression EQUAL . Expression

    L_PARENTHESIS   shift, and go to state 81
    NOT             shift, and go to state 82
    MINUS           shift, and go to state 83
    FALSE           shift, and go to state 32
    TRUE            shift, and go to state 33
    ID              shift, and go to state 60
    INT_LITERAL     shift, and go to state 34
    REAL_LITERAL    shift, and go to state 35
    STRING_LITERAL  shift, and go to state 36

    LiteralConstant    go to state 84
    VariableReference  go to state 85
    FunctionCall       go to state 86
    Expression         go to state 146


State 116

   78 Expression: Expression GREATER . Expression

    L_PARENTHESIS   shift, and go to state 81
    NOT             shift, and go to state 82
    MINUS           shift, and go to state 83
    FALSE           shift, and go to state 32
    TRUE            shift, and go to state 33
    ID              shift, and go to state 60
    INT_LITERAL     shift, and go to state 34
    REAL_LITERAL    shift, and go to state 35
    STRING_LITERAL  shift, and go to state 36

    LiteralConstant    go to state 84
    VariableReference  go to state 85
    FunctionCall       go to state 86
    Expression         go to state 147


State 117

   79 Expression: Expression GREATER_OR_EQUAL . Expression

    L_PARENTHESIS   shift, and go to state 81
    NOT             shift, and go to state 82
    MINUS           shift, and go to state 83
    FALSE           shift, and go to state 32
    TRUE            shift, and go to state 33
    ID              shift, and go to state 60
    INT_LITERAL     shift, and go to state 34
    REAL_LITERAL    shift, and go to state 35
    STRING_LITERAL  shift, and go to state 36

    LiteralConstant    go to state 84
    VariableReference  go to state 85
    FunctionCall       go to state 86
    Expression         go to state 148


State 118

   81 Expression: Expression NOT_EQUAL . Expression

    L_PARENTHESIS   shift, and go to state 81
    NOT             shift, and go to state 82
    MINUS           shift, and go to state 83
    FALSE           shift, and go to state 32
    TRUE            shift, and go to state 33
    ID              shift, and go to state 60
    INT_LITERAL     shift, and go to state 34
    REAL_LITERAL    shift, and go to state 35
    STRING_LITERAL  shift, and go to state 36

    LiteralConstant    go to state 84
    VariableReference  go to state 85
    FunctionCall       go to state 86
    Expression         go to state 149


State 119

   74 Expression: Expression PLUS . Expression

    L_PARENTHESIS   shift, and go to state 81
    NOT             shift, and go to state 82
    MINUS           shift, and go to state 83
    FALSE           shift, and go to state 32
    TRUE            shift, and go to state 33
    ID              shift, and go to state 60
    INT_LITERAL     shift, and go to state 34
    REAL_LITERAL    shift, and go to state 35
    STRING_LITERAL  shift, and go to state 36

    LiteralConstant    go to state 84
    VariableReference  go to state 85
    FunctionCall       go to state 86
    Expression         go to state 150


State 120

   75 Expression: Expression MINUS . Expression

    L_PARENTHESIS   shift, and go to state 81
    NOT             shift, and go to state 82
    MINUS           shift, and go to state 83
    FALSE           shift, and go to state 32
    TRUE            shift, and go to state 33
    ID              shift, and go to state 60
    INT_LITERAL     shift, and go to state 34
    REAL_LITERAL    shift, and go to state 35
    STRING_LITERAL  shift, and go to state 36

    LiteralConstant    go to state 84
    VariableReference  go to state 85
    FunctionCall       go to state 86
    Expression         go to state 151


State 121

   71 Expression: Expression MULTIPLY . Expression

    L_PARENTHESIS   shift, and go to state 81
    NOT             shift, and go to state 82
    MINUS           shift, and go to state 83
    FALSE           shift, and go to state 32
    TRUE            shift, and go to state 33
    ID              shift, and go to state 60
    INT_LITERAL     shift, and go to state 34
    REAL_LITERAL    shift, and go to state 35
    STRING_LITERAL  shift, and go to state 36

    LiteralConstant    go to state 84
    VariableReference  go to state 85
    FunctionCall       go to state 86
    Expression         go to state 152


State 122

   72 Expression: Expression DIVIDE . Expression

    L_PARENTHESIS   shift, and go to state 81
    NOT             shift, and go to state 82
    MINUS           shift, and go to state 83
    FALSE           shift, and go to state 32
    TRUE            shift, and go to state 33
    ID              shift, and go to state 60
    INT_LITERAL     shift, and go to state 34
    REAL_LITERAL    shift, and go to state 35
    STRING_LITERAL  shift, and go to state 36

    LiteralConstant    go to state 84
    VariableReference  go to state 85
    FunctionCall       go to state 86
    Expression         go to state 153


State 123

   73 Expression: Expression MOD . Expression

    L_PARENTHESIS   shift, and go to state 81
    NOT             shift, and go to state 82
    MINUS           shift, and go to state 83
    FALSE           shift, and go to state 32
    TRUE            shift, and go to state 33
    ID              shift, and go to state 60
    INT_LITERAL     shift, and go to state 34
    REAL_LITERAL    shift, and go to state 35
    STRING_LITERAL  shift, and go to state 36

    LiteralConstant    go to state 84
    VariableReference  go to state 85
    FunctionCall       go to state 86
    Expression         go to state 154


State 124

   53 Condition: IF Expression THEN . StatementList ElseOrNot END IF

    BEGIN_  shift, and go to state 22
    FOR     shift, and go to state 54
    IF      shift, and go to state 55
    WHILE   shift, and go to state 56
    RETURN  shift, and go to state 57
    PRINT   shift, and go to state 58
    READ    shift, and go to state 59
    ID      shift, and go to state 60

    $default  reduce using rule 88 (Epsilon)

    Statement           go to state 61
    CompoundStatement   go to state 62
    Simple              go to state 63
    VariableReference   go to state 64
    Condition           go to state 65
    While               go to state 66
    For                 go to state 67
    Return              go to state 68
    FunctionInvokation  go to state 69
    FunctionCall        go to state 70
    StatementList       go to state 155
    Statements          go to state 72
    Epsilon             go to state 73


State 125

   56 While: WHILE Expression DO . StatementList END DO

    BEGIN_  shift, and go to state 22
    FOR     shift, and go to state 54
    IF      shift, and go to state 55
    WHILE   shift, and go to state 56
    RETURN  shift, and go to state 57
    PRINT   shift, and go to state 58
    READ    shift, and go to state 59
    ID      shift, and go to state 60

    $default  reduce using rule 88 (Epsilon)

    Statement           go to state 61
    CompoundStatement   go to state 62
    Simple              go to state 63
    VariableReference   go to state 64
    Condition           go to state 65
    While               go to state 66
    For                 go to state 67
    Return              go to state 68
    FunctionInvokation  go to state 69
    FunctionCall        go to state 70
    StatementList       go to state 156
    Statements          go to state 72
    Epsilon             go to state 73


State 126

   58 Return: RETURN Expression SEMICOLON .

    $default  reduce using rule 58 (Return)


State 127

   47 Simple: PRINT Expression SEMICOLON .

    $default  reduce using rule 47 (Simple)


State 128

   48 Simple: READ VariableReference SEMICOLON .

    $default  reduce using rule 48 (Simple)


State 129

   60 FunctionCall: ID L_PARENTHESIS ExpressionList . R_PARENTHESIS

    R_PARENTHESIS  shift, and go to state 157


State 130

   62 ExpressionList: Expressions .
   64 Expressions: Expressions . COMMA Expression

    COMMA  shift, and go to state 158

    $default  reduce using rule 62 (ExpressionList)


State 131

   63 Expressions: Expression .
   71 Expression: Expression . MULTIPLY Expression
   72           | Expression . DIVIDE Expression
   73           | Expression . MOD Expression
   74           | Expression . PLUS Expression
   75           | Expression . MINUS Expression
   76           | Expression . LESS Expression
   77           | Expression . LESS_OR_EQUAL Expression
   78           | Expression . GREATER Expression
   79           | Expression . GREATER_OR_EQUAL Expression
   80           | Expression . EQUAL Expression
   81           | Expression . NOT_EQUAL Expression
   83           | Expression . AND Expression
   84           | Expression . OR Expression

    OR                shift, and go to state 111
    AND               shift, and go to state 112
    LESS              shift, and go to state 113
    LESS_OR_EQUAL     shift, and go to state 114
    EQUAL             shift, and go to state 115
    GREATER           shift, and go to state 116
    GREATER_OR_EQUAL  shift, and go to state 117
    NOT_EQUAL         shift, and go to state 118
    PLUS              shift, and go to state 119
    MINUS             shift, and go to state 120
    MULTIPLY          shift, and go to state 121
    DIVIDE            shift, and go to state 122
    MOD               shift, and go to state 123

    $default  reduce using rule 63 (Expressions)


State 132

   61 ExpressionList: Epsilon .

    $default  reduce using rule 61 (ExpressionList)


State 133

   51 ArrForm: L_BRACKET Expression . R_BRACKET
   71 Expression: Expression . MULTIPLY Expression
   72           | Expression . DIVIDE Expression
   73           | Expression . MOD Expression
   74           | Expression . PLUS Expression
   75           | Expression . MINUS Expression
   76           | Expression . LESS Expression
   77           | Expression . LESS_OR_EQUAL Expression
   78           | Expression . GREATER Expression
   79           | Expression . GREATER_OR_EQUAL Expression
   80           | Expression . EQUAL Expression
   81           | Expression . NOT_EQUAL Expression
   83           | Expression . AND Expression
   84           | Expression . OR Expression

    R_BRACKET         shift, and go to state 159
    OR                shift, and go to state 111
    AND               shift, and go to state 112
    LESS              shift, and go to state 113
    LESS_OR_EQUAL     shift, and go to state 114
    EQUAL             shift, and go to state 115
    GREATER           shift, and go to state 116
    GREATER_OR_EQUAL  shift, and go to state 117
    NOT_EQUAL         shift, and go to state 118
    PLUS              shift, and go to state 119
    MINUS             shift, and go to state 120
    MULTIPLY          shift, and go to state 121
    DIVIDE            shift, and go to state 122
    MOD               shift, and go to state 123


State 134

   52 ArrForm: ArrForm L_BRACKET . Expression R_BRACKET

    L_PARENTHESIS   shift, and go to state 81
    NOT             shift, and go to state 82
    MINUS           shift, and go to state 83
    FALSE           shift, and go to state 32
    TRUE            shift, and go to state 33
    ID              shift, and go to state 60
    INT_LITERAL     shift, and go to state 34
    REAL_LITERAL    shift, and go to state 35
    STRING_LITERAL  shift, and go to state 36

    LiteralConstant    go to state 84
    VariableReference  go to state 85
    FunctionCall       go to state 86
    Expression         go to state 160


State 135

   46 Simple: VariableReference ASSIGN Expression . SEMICOLON
   71 Expression: Expression . MULTIPLY Expression
   72           | Expression . DIVIDE Expression
   73           | Expression . MOD Expression
   74           | Expression . PLUS Expression
   75           | Expression . MINUS Expression
   76           | Expression . LESS Expression
   77           | Expression . LESS_OR_EQUAL Expression
   78           | Expression . GREATER Expression
   79           | Expression . GREATER_OR_EQUAL Expression
   80           | Expression . EQUAL Expression
   81           | Expression . NOT_EQUAL Expression
   83           | Expression . AND Expression
   84           | Expression . OR Expression

    SEMICOLON         shift, and go to state 161
    OR                shift, and go to state 111
    AND               shift, and go to state 112
    LESS              shift, and go to state 113
    LESS_OR_EQUAL     shift, and go to state 114
    EQUAL             shift, and go to state 115
    GREATER           shift, and go to state 116
    GREATER_OR_EQUAL  shift, and go to state 117
    NOT_EQUAL         shift, and go to state 118
    PLUS              shift, and go to state 119
    MINUS             shift, and go to state 120
    MULTIPLY          shift, and go to state 121
    DIVIDE            shift, and go to state 122
    MOD               shift, and go to state 123


State 136

   20 ReturnType: COLON ScalarType .

    $default  reduce using rule 20 (ReturnType)


State 137

   11 FunctionDeclaration: FunctionName L_PARENTHESIS FormalArgList R_PARENTHESIS ReturnType SEMICOLON . CompoundStatement END FunctionName

    BEGIN_  shift, and go to state 22

    CompoundStatement  go to state 162


State 138

   31 ArrDecl: ARRAY INT_LITERAL TO INT_LITERAL OF .

    $default  reduce using rule 31 (ArrDecl)


State 139

   32 ArrDecl: ArrDecl ARRAY INT_LITERAL TO INT_LITERAL . OF

    OF  shift, and go to state 163


State 140

   57 For: FOR ID ASSIGN INT_LITERAL . TO INT_LITERAL DO StatementList END DO

    TO  shift, and go to state 164


State 141

   69 Expression: L_PARENTHESIS Expression R_PARENTHESIS .

    $default  reduce using rule 69 (Expression)


State 142

   71 Expression: Expression . MULTIPLY Expression
   72           | Expression . DIVIDE Expression
   73           | Expression . MOD Expression
   74           | Expression . PLUS Expression
   75           | Expression . MINUS Expression
   76           | Expression . LESS Expression
   77           | Expression . LESS_OR_EQUAL Expression
   78           | Expression . GREATER Expression
   79           | Expression . GREATER_OR_EQUAL Expression
   80           | Expression . EQUAL Expression
   81           | Expression . NOT_EQUAL Expression
   83           | Expression . AND Expression
   84           | Expression . OR Expression
   84           | Expression OR Expression .

    AND               shift, and go to state 112
    LESS              shift, and go to state 113
    LESS_OR_EQUAL     shift, and go to state 114
    EQUAL             shift, and go to state 115
    GREATER           shift, and go to state 116
    GREATER_OR_EQUAL  shift, and go to state 117
    NOT_EQUAL         shift, and go to state 118
    PLUS              shift, and go to state 119
    MINUS             shift, and go to state 120
    MULTIPLY          shift, and go to state 121
    DIVIDE            shift, and go to state 122
    MOD               shift, and go to state 123

    $default  reduce using rule 84 (Expression)


State 143

   71 Expression: Expression . MULTIPLY Expression
   72           | Expression . DIVIDE Expression
   73           | Expression . MOD Expression
   74           | Expression . PLUS Expression
   75           | Expression . MINUS Expression
   76           | Expression . LESS Expression
   77           | Expression . LESS_OR_EQUAL Expression
   78           | Expression . GREATER Expression
   79           | Expression . GREATER_OR_EQUAL Expression
   80           | Expression . EQUAL Expression
   81           | Expression . NOT_EQUAL Expression
   83           | Expression . AND Expression
   83           | Expression AND Expression .
   84           | Expression . OR Expression

    LESS              shift, and go to state 113
    LESS_OR_EQUAL     shift, and go to state 114
    EQUAL             shift, and go to state 115
    GREATER           shift, and go to state 116
    GREATER_OR_EQUAL  shift, and go to state 117
    NOT_EQUAL         shift, and go to state 118
    PLUS              shift, and go to state 119
    MINUS             shift, and go to state 120
    MULTIPLY          shift, and go to state 121
    DIVIDE            shift, and go to state 122
    MOD               shift, and go to state 123

    $default  reduce using rule 83 (Expression)


State 144

   71 Expression: Expression . MULTIPLY Expression
   72           | Expression . DIVIDE Expression
   73           | Expression . MOD Expression
   74           | Expression . PLUS Expression
   75           | Expression . MINUS Expression
   76           | Expression . LESS Expression
   76           | Expression LESS Expression .
   77           | Expression . LESS_OR_EQUAL Expression
   78           | Expression . GREATER Expression
   79           | Expression . GREATER_OR_EQUAL Expression
   80           | Expression . EQUAL Expression
   81           | Expression . NOT_EQUAL Expression
   83           | Expression . AND Expression
   84           | Expression . OR Expression

    PLUS      shift, and go to state 119
    MINUS     shift, and go to state 120
    MULTIPLY  shift, and go to state 121
    DIVIDE    shift, and go to state 122
    MOD       shift, and go to state 123

    $default  reduce using rule 76 (Expression)


State 145

   71 Expression: Expression . MULTIPLY Expression
   72           | Expression . DIVIDE Expression
   73           | Expression . MOD Expression
   74           | Expression . PLUS Expression
   75           | Expression . MINUS Expression
   76           | Expression . LESS Expression
   77           | Expression . LESS_OR_EQUAL Expression
   77           | Expression LESS_OR_EQUAL Expression .
   78           | Expression . GREATER Expression
   79           | Expression . GREATER_OR_EQUAL Expression
   80           | Expression . EQUAL Expression
   81           | Expression . NOT_EQUAL Expression
   83           | Expression . AND Expression
   84           | Expression . OR Expression

    PLUS      shift, and go to state 119
    MINUS     shift, and go to state 120
    MULTIPLY  shift, and go to state 121
    DIVIDE    shift, and go to state 122
    MOD       shift, and go to state 123

    $default  reduce using rule 77 (Expression)


State 146

   71 Expression: Expression . MULTIPLY Expression
   72           | Expression . DIVIDE Expression
   73           | Expression . MOD Expression
   74           | Expression . PLUS Expression
   75           | Expression . MINUS Expression
   76           | Expression . LESS Expression
   77           | Expression . LESS_OR_EQUAL Expression
   78           | Expression . GREATER Expression
   79           | Expression . GREATER_OR_EQUAL Expression
   80           | Expression . EQUAL Expression
   80           | Expression EQUAL Expression .
   81           | Expression . NOT_EQUAL Expression
   83           | Expression . AND Expression
   84           | Expression . OR Expression

    PLUS      shift, and go to state 119
    MINUS     shift, and go to state 120
    MULTIPLY  shift, and go to state 121
    DIVIDE    shift, and go to state 122
    MOD       shift, and go to state 123

    $default  reduce using rule 80 (Expression)


State 147

   71 Expression: Expression . MULTIPLY Expression
   72           | Expression . DIVIDE Expression
   73           | Expression . MOD Expression
   74           | Expression . PLUS Expression
   75           | Expression . MINUS Expression
   76           | Expression . LESS Expression
   77           | Expression . LESS_OR_EQUAL Expression
   78           | Expression . GREATER Expression
   78           | Expression GREATER Expression .
   79           | Expression . GREATER_OR_EQUAL Expression
   80           | Expression . EQUAL Expression
   81           | Expression . NOT_EQUAL Expression
   83           | Expression . AND Expression
   84           | Expression . OR Expression

    PLUS      shift, and go to state 119
    MINUS     shift, and go to state 120
    MULTIPLY  shift, and go to state 121
    DIVIDE    shift, and go to state 122
    MOD       shift, and go to state 123

    $default  reduce using rule 78 (Expression)


State 148

   71 Expression: Expression . MULTIPLY Expression
   72           | Expression . DIVIDE Expression
   73           | Expression . MOD Expression
   74           | Expression . PLUS Expression
   75           | Expression . MINUS Expression
   76           | Expression . LESS Expression
   77           | Expression . LESS_OR_EQUAL Expression
   78           | Expression . GREATER Expression
   79           | Expression . GREATER_OR_EQUAL Expression
   79           | Expression GREATER_OR_EQUAL Expression .
   80           | Expression . EQUAL Expression
   81           | Expression . NOT_EQUAL Expression
   83           | Expression . AND Expression
   84           | Expression . OR Expression

    PLUS      shift, and go to state 119
    MINUS     shift, and go to state 120
    MULTIPLY  shift, and go to state 121
    DIVIDE    shift, and go to state 122
    MOD       shift, and go to state 123

    $default  reduce using rule 79 (Expression)


State 149

   71 Expression: Expression . MULTIPLY Expression
   72           | Expression . DIVIDE Expression
   73           | Expression . MOD Expression
   74           | Expression . PLUS Expression
   75           | Expression . MINUS Expression
   76           | Expression . LESS Expression
   77           | Expression . LESS_OR_EQUAL Expression
   78           | Expression . GREATER Expression
   79           | Expression . GREATER_OR_EQUAL Expression
   80           | Expression . EQUAL Expression
   81           | Expression . NOT_EQUAL Expression
   81           | Expression NOT_EQUAL Expression .
   83           | Expression . AND Expression
   84           | Expression . OR Expression

    PLUS      shift, and go to state 119
    MINUS     shift, and go to state 120
    MULTIPLY  shift, and go to state 121
    DIVIDE    shift, and go to state 122
    MOD       shift, and go to state 123

    $default  reduce using rule 81 (Expression)


State 150

   71 Expression: Expression . MULTIPLY Expression
   72           | Expression . DIVIDE Expression
   73           | Expression . MOD Expression
   74           | Expression . PLUS Expression
   74           | Expression PLUS Expression .
   75           | Expression . MINUS Expression
   76           | Expression . LESS Expression
   77           | Expression . LESS_OR_EQUAL Expression
   78           | Expression . GREATER Expression
   79           | Expression . GREATER_OR_EQUAL Expression
   80           | Expression . EQUAL Expression
   81           | Expression . NOT_EQUAL Expression
   83           | Expression . AND Expression
   84           | Expression . OR Expression

    MULTIPLY  shift, and go to state 121
    DIVIDE    shift, and go to state 122
    MOD       shift, and go to state 123

    $default  reduce using rule 74 (Expression)


State 151

   71 Expression: Expression . MULTIPLY Expression
   72           | Expression . DIVIDE Expression
   73           | Expression . MOD Expression
   74           | Expression . PLUS Expression
   75           | Expression . MINUS Expression
   75           | Expression MINUS Expression .
   76           | Expression . LESS Expression
   77           | Expression . LESS_OR_EQUAL Expression
   78           | Expression . GREATER Expression
   79           | Expression . GREATER_OR_EQUAL Expression
   80           | Expression . EQUAL Expression
   81           | Expression . NOT_EQUAL Expression
   83           | Expression . AND Expression
   84           | Expression . OR Expression

    MULTIPLY  shift, and go to state 121
    DIVIDE    shift, and go to state 122
    MOD       shift, and go to state 123

    $default  reduce using rule 75 (Expression)


State 152

   71 Expression: Expression . MULTIPLY Expression
   71           | Expression MULTIPLY Expression .
   72           | Expression . DIVIDE Expression
   73           | Expression . MOD Expression
   74           | Expression . PLUS Expression
   75           | Expression . MINUS Expression
   76           | Expression . LESS Expression
   77           | Expression . LESS_OR_EQUAL Expression
   78           | Expression . GREATER Expression
   79           | Expression . GREATER_OR_EQUAL Expression
   80           | Expression . EQUAL Expression
   81           | Expression . NOT_EQUAL Expression
   83           | Expression . AND Expression
   84           | Expression . OR Expression

    $default  reduce using rule 71 (Expression)


State 153

   71 Expression: Expression . MULTIPLY Expression
   72           | Expression . DIVIDE Expression
   72           | Expression DIVIDE Expression .
   73           | Expression . MOD Expression
   74           | Expression . PLUS Expression
   75           | Expression . MINUS Expression
   76           | Expression . LESS Expression
   77           | Expression . LESS_OR_EQUAL Expression
   78           | Expression . GREATER Expression
   79           | Expression . GREATER_OR_EQUAL Expression
   80           | Expression . EQUAL Expression
   81           | Expression . NOT_EQUAL Expression
   83           | Expression . AND Expression
   84           | Expression . OR Expression

    $default  reduce using rule 72 (Expression)


State 154

   71 Expression: Expression . MULTIPLY Expression
   72           | Expression . DIVIDE Expression
   73           | Expression . MOD Expression
   73           | Expression MOD Expression .
   74           | Expression . PLUS Expression
   75           | Expression . MINUS Expression
   76           | Expression . LESS Expression
   77           | Expression . LESS_OR_EQUAL Expression
   78           | Expression . GREATER Expression
   79           | Expression . GREATER_OR_EQUAL Expression
   80           | Expression . EQUAL Expression
   81           | Expression . NOT_EQUAL Expression
   83           | Expression . AND Expression
   84           | Expression . OR Expression

    $default  reduce using rule 73 (Expression)


State 155

   53 Condition: IF Expression THEN StatementList . ElseOrNot END IF

    ELSE  shift, and go to state 165

    $default  reduce using rule 88 (Epsilon)

    ElseOrNot  go to state 166
    Epsilon    go to state 167


State 156

   56 While: WHILE Expression DO StatementList . END DO

    END  shift, and go to state 168


State 157

   60 FunctionCall: ID L_PARENTHESIS ExpressionList R_PARENTHESIS .

    $default  reduce using rule 60 (FunctionCall)


State 158

   64 Expressions: Expressions COMMA . Expression

    L_PARENTHESIS   shift, and go to state 81
    NOT             shift, and go to state 82
    MINUS           shift, and go to state 83
    FALSE           shift, and go to state 32
    TRUE            shift, and go to state 33
    ID              shift, and go to state 60
    INT_LITERAL     shift, and go to state 34
    REAL_LITERAL    shift, and go to state 35
    STRING_LITERAL  shift, and go to state 36

    LiteralConstant    go to state 84
    VariableReference  go to state 85
    FunctionCall       go to state 86
    Expression         go to state 169


State 159

   51 ArrForm: L_BRACKET Expression R_BRACKET .

    $default  reduce using rule 51 (ArrForm)


State 160

   52 ArrForm: ArrForm L_BRACKET Expression . R_BRACKET
   71 Expression: Expression . MULTIPLY Expression
   72           | Expression . DIVIDE Expression
   73           | Expression . MOD Expression
   74           | Expression . PLUS Expression
   75           | Expression . MINUS Expression
   76           | Expression . LESS Expression
   77           | Expression . LESS_OR_EQUAL Expression
   78           | Expression . GREATER Expression
   79           | Expression . GREATER_OR_EQUAL Expression
   80           | Expression . EQUAL Expression
   81           | Expression . NOT_EQUAL Expression
   83           | Expression . AND Expression
   84           | Expression . OR Expression

    R_BRACKET         shift, and go to state 170
    OR                shift, and go to state 111
    AND               shift, and go to state 112
    LESS              shift, and go to state 113
    LESS_OR_EQUAL     shift, and go to state 114
    EQUAL             shift, and go to state 115
    GREATER           shift, and go to state 116
    GREATER_OR_EQUAL  shift, and go to state 117
    NOT_EQUAL         shift, and go to state 118
    PLUS              shift, and go to state 119
    MINUS             shift, and go to state 120
    MULTIPLY          shift, and go to state 121
    DIVIDE            shift, and go to state 122
    MOD               shift, and go to state 123


State 161

   46 Simple: VariableReference ASSIGN Expression SEMICOLON .

    $default  reduce using rule 46 (Simple)


State 162

   11 FunctionDeclaration: FunctionName L_PARENTHESIS FormalArgList R_PARENTHESIS ReturnType SEMICOLON CompoundStatement . END FunctionName

    END  shift, and go to state 171


State 163

   32 ArrDecl: ArrDecl ARRAY INT_LITERAL TO INT_LITERAL OF .

    $default  reduce using rule 32 (ArrDecl)


State 164

   57 For: FOR ID ASSIGN INT_LITERAL TO . INT_LITERAL DO StatementList END DO

    INT_LITERAL  shift, and go to state 172


State 165

   54 ElseOrNot: ELSE . StatementList

    BEGIN_  shift, and go to state 22
    FOR     shift, and go to state 54
    IF      shift, and go to state 55
    WHILE   shift, and go to state 56
    RETURN  shift, and go to state 57
    PRINT   shift, and go to state 58
    READ    shift, and go to state 59
    ID      shift, and go to state 60

    $default  reduce using rule 88 (Epsilon)

    Statement           go to state 61
    CompoundStatement   go to state 62
    Simple              go to state 63
    VariableReference   go to state 64
    Condition           go to state 65
    While               go to state 66
    For                 go to state 67
    Return              go to state 68
    FunctionInvokation  go to state 69
    FunctionCall        go to state 70
    StatementList       go to state 173
    Statements          go to state 72
    Epsilon             go to state 73


State 166

   53 Condition: IF Expression THEN StatementList ElseOrNot . END IF

    END  shift, and go to state 174


State 167

   55 ElseOrNot: Epsilon .

    $default  reduce using rule 55 (ElseOrNot)


State 168

   56 While: WHILE Expression DO StatementList END . DO

    DO  shift, and go to state 175


State 169

   64 Expressions: Expressions COMMA Expression .
   71 Expression: Expression . MULTIPLY Expression
   72           | Expression . DIVIDE Expression
   73           | Expression . MOD Expression
   74           | Expression . PLUS Expression
   75           | Expression . MINUS Expression
   76           | Expression . LESS Expression
   77           | Expression . LESS_OR_EQUAL Expression
   78           | Expression . GREATER Expression
   79           | Expression . GREATER_OR_EQUAL Expression
   80           | Expression . EQUAL Expression
   81           | Expression . NOT_EQUAL Expression
   83           | Expression . AND Expression
   84           | Expression . OR Expression

    OR                shift, and go to state 111
    AND               shift, and go to state 112
    LESS              shift, and go to state 113
    LESS_OR_EQUAL     shift, and go to state 114
    EQUAL             shift, and go to state 115
    GREATER           shift, and go to state 116
    GREATER_OR_EQUAL  shift, and go to state 117
    NOT_EQUAL         shift, and go to state 118
    PLUS              shift, and go to state 119
    MINUS             shift, and go to state 120
    MULTIPLY          shift, and go to state 121
    DIVIDE            shift, and go to state 122
    MOD               shift, and go to state 123

    $default  reduce using rule 64 (Expressions)


State 170

   52 ArrForm: ArrForm L_BRACKET Expression R_BRACKET .

    $default  reduce using rule 52 (ArrForm)


State 171

   11 FunctionDeclaration: FunctionName L_PARENTHESIS FormalArgList R_PARENTHESIS ReturnType SEMICOLON CompoundStatement END . FunctionName

    ID  shift, and go to state 13

    FunctionName  go to state 176


State 172

   57 For: FOR ID ASSIGN INT_LITERAL TO INT_LITERAL . DO StatementList END DO

    DO  shift, and go to state 177


State 173

   54 ElseOrNot: ELSE StatementList .

    $default  reduce using rule 54 (ElseOrNot)


State 174

   53 Condition: IF Expression THEN StatementList ElseOrNot END . IF

    IF  shift, and go to state 178


State 175

   56 While: WHILE Expression DO StatementList END DO .

    $default  reduce using rule 56 (While)


State 176

   11 FunctionDeclaration: FunctionName L_PARENTHESIS FormalArgList R_PARENTHESIS ReturnType SEMICOLON CompoundStatement END FunctionName .

    $default  reduce using rule 11 (FunctionDeclaration)


State 177

   57 For: FOR ID ASSIGN INT_LITERAL TO INT_LITERAL DO . StatementList END DO

    BEGIN_  shift, and go to state 22
    FOR     shift, and go to state 54
    IF      shift, and go to state 55
    WHILE   shift, and go to state 56
    RETURN  shift, and go to state 57
    PRINT   shift, and go to state 58
    READ    shift, and go to state 59
    ID      shift, and go to state 60

    $default  reduce using rule 88 (Epsilon)

    Statement           go to state 61
    CompoundStatement   go to state 62
    Simple              go to state 63
    VariableReference   go to state 64
    Condition           go to state 65
    While               go to state 66
    For                 go to state 67
    Return              go to state 68
    FunctionInvokation  go to state 69
    FunctionCall        go to state 70
    StatementList       go to state 179
    Statements          go to state 72
    Epsilon             go to state 73


State 178

   53 Condition: IF Expression THEN StatementList ElseOrNot END IF .

    $default  reduce using rule 53 (Condition)


State 179

   57 For: FOR ID ASSIGN INT_LITERAL TO INT_LITERAL DO StatementList . END DO

    END  shift, and go to state 180


State 180

   57 For: FOR ID ASSIGN INT_LITERAL TO INT_LITERAL DO StatementList END . DO

    DO  shift, and go to state 181


State 181

   57 For: FOR ID ASSIGN INT_LITERAL TO INT_LITERAL DO StatementList END DO .

    $default  reduce using rule 57 (For)
